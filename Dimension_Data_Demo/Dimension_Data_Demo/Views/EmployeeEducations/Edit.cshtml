@model Dimension_Data_Demo.Models.EmployeeEducation

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>EmployeeEducation</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="EducationId" />
            <div class="form-group">
                <label asp-for="Education" class="control-label"></label>
                <input asp-for="Education" class="form-control" />
                <span asp-validation-for="Education" class="text-danger"></span>
            </div>

            <table class="table">
                <thead>
                    <tr>
                        <td>Education field</td>
                        <td id="ddlField" onchange="get_set_fieldValue()">@Html.DropDownList("fieldData", (IEnumerable<SelectListItem>)ViewData["fieldData"])</td>
                    </tr>
                </thead>
            </table>
            <div class="form-group" style="visibility:hidden; margin:0rem; padding:0rem">
                <label asp-for="EducationField" class="control-label"></label>
                <input asp-for="EducationField" class="form-control" />
                <span asp-validation-for="EducationField" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

       
<script>
    function get_set_fieldValue() {
        var ddl_value = $("#ddlField :selected").text();
        var input_value = document.getElementById("EducationField");
        console.log(input_value);
        input_value.innerHTML = ddl_value;
        input_value.value = ddl_value;
        console.log(input_value);
        };
</script>
<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
